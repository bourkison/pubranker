drop policy "users can view their own associations" on "public"."collection_items";

drop policy "Enable insert for users based on user_id" on "public"."collection_items";

alter table "public"."collection_items" drop constraint "collection_items_created_by_fkey";

alter table "public"."collection_items" drop constraint "uq_collection_items";

alter table "public"."collection_items" drop constraint "collection_items_collection_id_fkey";

alter table "public"."collection_items" drop constraint "collection_items_pub_id_fkey";

drop index if exists "public"."uq_collection_items";

alter table "public"."collection_follows" add column "updated_at" timestamp with time zone not null default now();

alter table "public"."collection_items" drop column "created_by";

alter table "public"."collection_items" add column "user_id" uuid not null default auth.uid();

alter table "public"."collection_items" alter column "collection_id" add generated by default as identity;

alter table "public"."collection_items" alter column "id" drop default;

alter table "public"."collection_items" alter column "id" add generated by default as identity;

alter table "public"."collection_items" alter column "id" set data type bigint using "id"::bigint;

alter table "public"."collection_items" alter column "pub_id" add generated by default as identity;

alter table "public"."collections" add column "updated_at" timestamp with time zone not null default now();

drop sequence if exists "public"."collection_items_id_seq";

alter table "public"."collection_items" add constraint "collection_items_user_id_fkey" FOREIGN KEY (user_id) REFERENCES users_public(id) ON DELETE CASCADE not valid;

alter table "public"."collection_items" validate constraint "collection_items_user_id_fkey";

alter table "public"."collection_items" add constraint "collection_items_collection_id_fkey" FOREIGN KEY (collection_id) REFERENCES collections(id) ON DELETE CASCADE not valid;

alter table "public"."collection_items" validate constraint "collection_items_collection_id_fkey";

alter table "public"."collection_items" add constraint "collection_items_pub_id_fkey" FOREIGN KEY (pub_id) REFERENCES pubs(id) ON DELETE CASCADE not valid;

alter table "public"."collection_items" validate constraint "collection_items_pub_id_fkey";

set check_function_bodies = off;

CREATE OR REPLACE FUNCTION public.update_collection_updated_at()
 RETURNS trigger
 LANGUAGE plpgsql
 SECURITY DEFINER
AS $function$BEGIN
  UPDATE collections
  SET updated_at = now()
  WHERE collections.id = NEW.collection_id;

  UPDATE collection_follows
  SET updated_at = now()
  WHERE collection_id = NEW.collection_id;

  RETURN NEW;
END$function$
;

create policy "Enable users to view their own data only"
on "public"."collection_follows"
as permissive
for select
to authenticated
using ((( SELECT auth.uid() AS uid) = user_id));


create policy "Enable read access for all users"
on "public"."collection_items"
as permissive
for select
to public
using (true);


create policy "Enable insert for users based on user_id"
on "public"."collection_items"
as permissive
for insert
to public
with check ((( SELECT auth.uid() AS uid) = user_id));



